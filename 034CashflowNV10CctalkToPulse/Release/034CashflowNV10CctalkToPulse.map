Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

i                   0x2               ./main.o
buffer              0x2a              ./main.o
bufferOldC          0x2a              ./main.o
bufferC             0x2a              ./main.o
bufferOld           0x2a              ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./HD44780.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xa96
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_9
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e        0x0 ./HD44780.o
 .text          0x0000005e        0x0 ./main.o
 .text          0x0000005e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x0000005e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text          0x0000005e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x0000005e                . = ALIGN (0x2)
 *(.text.*)
 .text._LCD_OutNibble
                0x0000005e       0x2a ./HD44780.o
                0x0000005e                _LCD_OutNibble
 .text._LCD_Write
                0x00000088       0x20 ./HD44780.o
                0x00000088                _LCD_Write
 .text.LCD_WriteCommand
                0x000000a8        0x6 ./HD44780.o
                0x000000a8                LCD_WriteCommand
 .text.LCD_WriteData
                0x000000ae        0x6 ./HD44780.o
                0x000000ae                LCD_WriteData
 .text.LCD_WriteText
                0x000000b4       0x18 ./HD44780.o
                0x000000b4                LCD_WriteText
 .text.LCD_GoTo
                0x000000cc       0x12 ./HD44780.o
                0x000000cc                LCD_GoTo
 .text.LCD_Clear
                0x000000de        0xe ./HD44780.o
                0x000000de                LCD_Clear
 .text.LCD_Home
                0x000000ec        0xe ./HD44780.o
                0x000000ec                LCD_Home
 .text.LCD_Initalize
                0x000000fa       0x6c ./HD44780.o
                0x000000fa                LCD_Initalize
 .text.uart_init
                0x00000166        0xe ./main.o
                0x00000166                uart_init
 .text.uart_putc
                0x00000174        0x8 ./main.o
                0x00000174                uart_putc
 .text.uart_ischar
                0x0000017c        0x6 ./main.o
                0x0000017c                uart_ischar
 .text.uart_getc
                0x00000182        0x8 ./main.o
                0x00000182                uart_getc
 .text.uartPut  0x0000018a       0x52 ./main.o
                0x0000018a                uartPut
 .text.bufferEq
                0x000001dc       0x4a ./main.o
                0x000001dc                bufferEq
 .text.bufferEqC
                0x00000226       0x4a ./main.o
                0x00000226                bufferEqC
 .text.main     0x00000270      0x822 ./main.o
                0x00000270                main
 .text.libgcc   0x00000a92        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000a92        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000a92        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000a92                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000a92        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00000a92                exit
                0x00000a92                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000a92        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000a96                _etext = .

.data           0x00800060       0x1a load address 0x00000a96
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./HD44780.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.start    0x00800060        0x1 ./main.o
                0x00800060                start
 .data.event    0x00800061        0x2 ./main.o
                0x00800061                event
 .data.firstRun
                0x00800063        0x2 ./main.o
                0x00800063                firstRun
 .data.eventC   0x00800065        0x2 ./main.o
                0x00800065                eventC
 .data.firstRunC
                0x00800067        0x2 ./main.o
                0x00800067                firstRunC
 .data.dopelnienie
                0x00800069        0x2 ./main.o
                0x00800069                dopelnienie
 .data.dw2      0x0080006b        0x2 ./main.o
                0x0080006b                dw2
 .data.db2      0x0080006d        0x2 ./main.o
                0x0080006d                db2
 .data.poszlo   0x0080006f        0x2 ./main.o
                0x0080006f                poszlo
 *(.rodata)
 *(.rodata*)
 .rodata.C.0.1593
                0x00800071        0x8 ./main.o
 *(.gnu.linkonce.d*)
                0x0080007a                . = ALIGN (0x2)
 *fill*         0x00800079        0x1 00
                0x0080007a                _edata = .
                0x0080007a                PROVIDE (__data_end, .)

.bss            0x0080007a       0xc7
                0x0080007a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0080007a        0x0 ./HD44780.o
 .bss           0x0080007a        0x0 ./main.o
 .bss           0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.stak      0x0080007a        0x1 ./main.o
                0x0080007a                stak
 .bss.punkty    0x0080007b        0x2 ./main.o
                0x0080007b                punkty
 .bss.punktyb   0x0080007d        0x2 ./main.o
                0x0080007d                punktyb
 .bss.bank      0x0080007f        0x2 ./main.o
                0x0080007f                bank
 .bss.bankC     0x00800081        0x2 ./main.o
                0x00800081                bankC
 .bss.ban       0x00800083        0x2 ./main.o
                0x00800083                ban
 .bss.wrz       0x00800085        0x2 ./main.o
                0x00800085                wrz
 .bss.zmienna   0x00800087        0x2 ./main.o
                0x00800087                zmienna
 .bss.d         0x00800089        0x2 ./main.o
                0x00800089                d
 .bss.stop      0x0080008b        0x2 ./main.o
                0x0080008b                stop
 .bss.zmiennaw  0x0080008d        0x2 ./main.o
                0x0080008d                zmiennaw
 .bss.dw        0x0080008f        0x2 ./main.o
                0x0080008f                dw
 .bss.stopw     0x00800091        0x2 ./main.o
                0x00800091                stopw
 .bss.db        0x00800093        0x2 ./main.o
                0x00800093                db
 .bss.ziet      0x00800095        0x2 ./main.o
                0x00800095                ziet
 *(COMMON)
 COMMON         0x00800097       0xaa ./main.o
                0x00800097                i
                0x00800099                buffer
                0x008000c3                bufferOldC
                0x008000ed                bufferC
                0x00800117                bufferOld
                0x00800141                PROVIDE (__bss_end, .)
                0x00000a96                __data_load_start = LOADADDR (.data)
                0x00000ab0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800141        0x0
                0x00800141                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800141                PROVIDE (__noinit_end, .)
                0x00800141                _end = .
                0x00800141                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(034CashflowNV10CctalkToPulse.elf elf32-avr)
LOAD linker stubs
