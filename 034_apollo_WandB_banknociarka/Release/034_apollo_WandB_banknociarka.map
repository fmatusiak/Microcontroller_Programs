Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

buffers             0x2a              ./main.o
buffer              0x2a              ./main.o
bufferOld           0x2a              ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./HD44780.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x14da
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_9
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e        0x0 ./HD44780.o
 .text          0x0000005e        0x0 ./main.o
 .text          0x0000005e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x0000005e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text          0x0000005e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x0000005e                . = ALIGN (0x2)
 *(.text.*)
 .text._LCD_OutNibble
                0x0000005e       0x2a ./HD44780.o
                0x0000005e                _LCD_OutNibble
 .text._LCD_Write
                0x00000088       0x20 ./HD44780.o
                0x00000088                _LCD_Write
 .text.LCD_WriteCommand
                0x000000a8        0x6 ./HD44780.o
                0x000000a8                LCD_WriteCommand
 .text.LCD_WriteData
                0x000000ae        0x6 ./HD44780.o
                0x000000ae                LCD_WriteData
 .text.LCD_WriteText
                0x000000b4       0x18 ./HD44780.o
                0x000000b4                LCD_WriteText
 .text.LCD_GoTo
                0x000000cc       0x12 ./HD44780.o
                0x000000cc                LCD_GoTo
 .text.LCD_Clear
                0x000000de        0xe ./HD44780.o
                0x000000de                LCD_Clear
 .text.LCD_Home
                0x000000ec        0xe ./HD44780.o
                0x000000ec                LCD_Home
 .text.LCD_Initalize
                0x000000fa       0x6c ./HD44780.o
                0x000000fa                LCD_Initalize
 .text.uart_init
                0x00000166        0xe ./main.o
                0x00000166                uart_init
 .text.uart_putc
                0x00000174        0x8 ./main.o
                0x00000174                uart_putc
 .text.uart_ischar
                0x0000017c        0x6 ./main.o
                0x0000017c                uart_ischar
 .text.uart_getc
                0x00000182       0xfc ./main.o
                0x00000182                uart_getc
 .text.uartPut  0x0000027e       0x52 ./main.o
                0x0000027e                uartPut
 .text.main     0x000002d0      0xf22 ./main.o
                0x000002d0                main
 .text.bufferEq
                0x000011f2       0x4a ./main.o
                0x000011f2                bufferEq
 .text.uart_putc_s
                0x0000123c       0x4a ./main.o
                0x0000123c                uart_putc_s
 .text.uartPutS
                0x00001286       0x62 ./main.o
                0x00001286                uartPutS
 .text.czytaj_bajt
                0x000012e8      0x1ec ./main.o
                0x000012e8                czytaj_bajt
 .text.wyj1Flash
                0x000014d4        0x2 ./main.o
                0x000014d4                wyj1Flash
 .text.libgcc   0x000014d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000014d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x000014d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x000014d6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000014d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x000014d6                exit
                0x000014d6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000014d6        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000014da                _etext = .

.data           0x00800060       0x58 load address 0x000014da
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./HD44780.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.event    0x00800060        0x2 ./main.o
                0x00800060                event
 .data.firstRun
                0x00800062        0x2 ./main.o
                0x00800062                firstRun
 .data.dawaj    0x00800064        0x2 ./main.o
                0x00800064                dawaj
 *(.rodata)
 *(.rodata*)
 .rodata.C.17.1579
                0x00800066        0x3 ./main.o
 .rodata.C.16.1568
                0x00800069        0x7 ./main.o
 .rodata.C.15.1562
                0x00800070        0x7 ./main.o
 .rodata.C.14.1556
                0x00800077        0x7 ./main.o
 .rodata.C.13.1550
                0x0080007e        0x7 ./main.o
 .rodata.C.12.1544
                0x00800085        0x7 ./main.o
 .rodata.C.11.1538
                0x0080008c        0x3 ./main.o
 .rodata.C.10.1532
                0x0080008f        0x7 ./main.o
 .rodata.C.9.1521
                0x00800096        0x9 ./main.o
 .rodata.C.8.1515
                0x0080009f        0x8 ./main.o
 .rodata.C.7.1504
                0x008000a7        0x3 ./main.o
 .rodata.C.6.1483
                0x008000aa        0xe ./main.o
 *(.gnu.linkonce.d*)
                0x008000b8                . = ALIGN (0x2)
                0x008000b8                _edata = .
                0x008000b8                PROVIDE (__data_end, .)

.bss            0x008000b8       0xbc
                0x008000b8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000b8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x008000b8        0x0 ./HD44780.o
 .bss           0x008000b8        0x0 ./main.o
 .bss           0x008000b8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x008000b8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x008000b8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.bank      0x008000b8        0x2 ./main.o
                0x008000b8                bank
 .bss.d         0x008000ba        0x2 ./main.o
                0x008000ba                d
 .bss.g         0x008000bc        0x2 ./main.o
                0x008000bc                g
 .bss.i         0x008000be        0x2 ./main.o
                0x008000be                i
 .bss.counter   0x008000c0        0x2 ./main.o
                0x008000c0                counter
 .bss.n1        0x008000c2        0x2 ./main.o
                0x008000c2                n1
 .bss.m1        0x008000c4        0x2 ./main.o
                0x008000c4                m1
 .bss.n2        0x008000c6        0x2 ./main.o
                0x008000c6                n2
 .bss.m2        0x008000c8        0x2 ./main.o
                0x008000c8                m2
 .bss.n3        0x008000ca        0x2 ./main.o
                0x008000ca                n3
 .bss.m3        0x008000cc        0x2 ./main.o
                0x008000cc                m3
 .bss.n4        0x008000ce        0x2 ./main.o
                0x008000ce                n4
 .bss.m4        0x008000d0        0x2 ./main.o
                0x008000d0                m4
 .bss.n5        0x008000d2        0x2 ./main.o
                0x008000d2                n5
 .bss.m5        0x008000d4        0x2 ./main.o
                0x008000d4                m5
 .bss.stop      0x008000d6        0x2 ./main.o
                0x008000d6                stop
 .bss.coin      0x008000d8        0x2 ./main.o
                0x008000d8                coin
 .bss.coinh     0x008000da        0x2 ./main.o
                0x008000da                coinh
 .bss.j         0x008000dc        0x2 ./main.o
                0x008000dc                j
 .bss.monety    0x008000de        0x2 ./main.o
                0x008000de                monety
 .bss.l1        0x008000e0        0x2 ./main.o
                0x008000e0                l1
 .bss.l2        0x008000e2        0x2 ./main.o
                0x008000e2                l2
 .bss.l3        0x008000e4        0x2 ./main.o
                0x008000e4                l3
 .bss.l4        0x008000e6        0x2 ./main.o
                0x008000e6                l4
 .bss.l5        0x008000e8        0x2 ./main.o
                0x008000e8                l5
 .bss.l6        0x008000ea        0x2 ./main.o
                0x008000ea                l6
 .bss.l7        0x008000ec        0x2 ./main.o
                0x008000ec                l7
 .bss.l8        0x008000ee        0x2 ./main.o
                0x008000ee                l8
 .bss.bezwrzutnika
                0x008000f0        0x2 ./main.o
                0x008000f0                bezwrzutnika
 .bss.start     0x008000f2        0x2 ./main.o
                0x008000f2                start
 .bss.czascoin  0x008000f4        0x2 ./main.o
                0x008000f4                czascoin
 *(COMMON)
 COMMON         0x008000f6       0x7e ./main.o
                0x008000f6                buffers
                0x00800120                buffer
                0x0080014a                bufferOld
                0x00800174                PROVIDE (__bss_end, .)
                0x000014da                __data_load_start = LOADADDR (.data)
                0x00001532                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800174        0x0
                0x00800174                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800174                PROVIDE (__noinit_end, .)
                0x00800174                _end = .
                0x00800174                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(034_apollo_WandB_banknociarka.elf elf32-avr)
LOAD linker stubs
